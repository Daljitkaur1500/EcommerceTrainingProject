{"ast":null,"code":"import React,{createContext,useEffect,useState}from\"react\";// import all_product from '../Components/Assets/all_product'\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const ShopContext=/*#__PURE__*/createContext(null);const getDefaultCart=()=>{let cart={};for(let index=0;index<300+1;index++){cart[index]=0;}return cart;};const ShopContextProvider=props=>{const[cartItems,setCartItems]=useState(getDefaultCart());const[all_product,setAll_Product]=useState([]);useEffect(()=>{fetch('http://localhost:4000/all-products').then(res=>res.json()).then(data=>setAll_Product(data));if(localStorage.getItem('auth-token')){fetch('http://localhost:4000/getcart',{method:'POST',headers:{Accept:'application/form-data','auth-token':\"\".concat(localStorage.getItem('auth-token'),\", \\n                            'Content-Type': 'application/json'}\")},body:\"\"}).then(res=>res.json()).then(data=>setCartItems(data));}},[]);const addToCart=itemId=>{setCartItems(prev=>({...prev,[itemId]:prev[itemId]+1}));if(localStorage.getItem('auth-token')){fetch('http://localhost:4000/addtocart',{method:'POST',headers:{Accept:'application/form-data','auth-token':\"\".concat(localStorage.getItem('auth-token')),'Content-Type':'application/json'},body:JSON.stringify({\"itemId\":itemId})}).then(res=>res.json).then(data=>console.log(data));}};const removeFromCart=itemId=>{setCartItems(prev=>({...prev,[itemId]:prev[itemId]-1}));if(localStorage.getItem('auth-token')){fetch('http://localhost:4000/removefromcart',{method:'POST',headers:{Accept:'application/form-data','auth-token':\"\".concat(localStorage.getItem('auth-token')),'Content-Type':'application/json'},body:JSON.stringify({\"itemId\":itemId})}).then(res=>res.json).then(data=>console.log(data));}};const getTotalCartValue=()=>{var total_amount=0;for(const item in cartItems){if(cartItems[item]>0){let itemInfo=all_product.find(product=>product.id===Number(item));total_amount+=itemInfo.new_price*cartItems[item];}}return total_amount;};const getTotalCartItems=()=>{var total_items=0;for(const item in cartItems){var current_item_quantity=cartItems[item];if(current_item_quantity>0){total_items+=current_item_quantity;}}return total_items;};const contextValue={all_product,cartItems,addToCart,removeFromCart,getTotalCartValue,getTotalCartItems};return/*#__PURE__*/_jsx(ShopContext.Provider,{value:contextValue,children:props.children});};export default ShopContextProvider;","map":{"version":3,"names":["React","createContext","useEffect","useState","jsx","_jsx","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","cartItems","setCartItems","all_product","setAll_Product","fetch","then","res","json","data","localStorage","getItem","method","headers","Accept","concat","body","addToCart","itemId","prev","JSON","stringify","console","log","removeFromCart","getTotalCartValue","total_amount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","total_items","current_item_quantity","contextValue","Provider","value","children"],"sources":["D:/Workspace/E-Commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n// import all_product from '../Components/Assets/all_product'\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let index = 0; index < 300+1; index++) {\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\n\r\nconst ShopContextProvider = (props) => {\r\n    const [cartItems,setCartItems] = useState(getDefaultCart());\r\n    const [all_product, setAll_Product] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/all-products')\r\n        .then(res => res.json())\r\n        .then(data => setAll_Product(data));\r\n\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/getcart',{\r\n                method: 'POST',\r\n                headers: {\r\n                            Accept: 'application/form-data', \r\n                            'auth-token': `${localStorage.getItem('auth-token')}, \r\n                            'Content-Type': 'application/json'}`\r\n                        },\r\n                body: \"\"\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => setCartItems(data));\r\n        }\r\n    },[])\r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({...prev,[itemId]:prev[itemId]+1}));\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                            Accept: 'application/form-data', \r\n                            'auth-token': `${localStorage.getItem('auth-token')}`, \r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                body: JSON.stringify({\"itemId\": itemId})\r\n            })\r\n            .then(res => res.json)\r\n            .then(data => console.log(data))\r\n        }\r\n    }\r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({...prev,[itemId]:prev[itemId]-1}));\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                            Accept: 'application/form-data', \r\n                            'auth-token': `${localStorage.getItem('auth-token')}`, \r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                body: JSON.stringify({\"itemId\": itemId})\r\n            })\r\n            .then(res => res.json)\r\n            .then(data => console.log(data))\r\n        }\r\n\r\n    }\r\n\r\n    const getTotalCartValue = () => {\r\n        var total_amount = 0;\r\n        for (const item in cartItems) {\r\n            if(cartItems[item]>0){\r\n                let itemInfo = all_product.find((product) => product.id===Number(item));\r\n                total_amount += (itemInfo.new_price * cartItems[item]);\r\n            }\r\n        }\r\n        return total_amount;\r\n    }\r\n\r\n    const getTotalCartItems = () => {\r\n        var total_items = 0;\r\n        for (const item in cartItems){\r\n            var current_item_quantity = cartItems[item];\r\n            if(current_item_quantity>0){\r\n                total_items += current_item_quantity;\r\n            }\r\n        }\r\n        return total_items;\r\n    }\r\n\r\n    const contextValue = {all_product,cartItems,addToCart,removeFromCart, getTotalCartValue, getTotalCartItems};\r\n\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}